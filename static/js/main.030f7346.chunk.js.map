{"version":3,"sources":["components/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","vote","title","poster_path","overview","vote_average","className","src","alt","App","useState","movies","setMovies","searchTerm","setSearchTerm","useEffect","getMoives","API","fetch","then","res","json","data","console","log","results","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","length","map","movie","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAiCeA,EAnBD,SAAC,GAAoD,IAV7CC,EAUJC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,aAC5C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAfD,mCAegBJ,EAAaK,IAAKN,IACtC,sBAAKI,UAAU,aAAf,UACI,6BAAKJ,IACL,sBAAMI,UAAS,eAhBTL,EAgB+BI,EAf9CJ,GAAQ,EACA,QACAA,GAAQ,EACR,SAEA,QAUC,SACKI,OAIT,sBAAKC,UAAU,aAAf,UACI,2CACA,4BAAIF,WCgCLK,MArDf,WAAgB,IAAD,EAEiBC,mBAAS,IAF1B,mBAELC,EAFK,KAEGC,EAFH,OAGyBF,mBAAS,IAHlC,mBAGLG,EAHK,KAGOC,EAHP,KAKbC,qBAAU,WACNC,EATe,yHAUhB,IAEH,IAAMA,EAAY,SAACC,GACjBC,MAAMD,GACLE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZV,EAAUU,EAAKG,aAiBnB,OACE,gCACE,mCACE,+BAAI,sCAAJ,gBACA,sBAAMC,SAjBW,SAACC,GACpBA,EAAEC,iBAECf,GACDG,EAxBW,6FAwBYH,GAGzBC,EAAc,KAUZ,SACE,uBACER,UAAU,SACVuB,KAAK,SACLC,YAAY,SACZC,MAAOlB,EACPmB,SAba,SAACL,GACpBb,EAAca,EAAEM,OAAOF,eAiBvB,qBAAKzB,UAAU,kBAAf,SACGK,EAAOuB,OAAS,GAAKvB,EAAOwB,KAAI,SAACC,GAAD,OAAW,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,aCzCvDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.030f7346.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nconst setVoteClass = (vote) => {\r\n    if(vote >= 8){\r\n        return 'green';\r\n    } else if (vote >= 6) {\r\n        return 'orange';\r\n    } else {\r\n        return 'red';\r\n    }\r\n}\r\n\r\nconst Movie = ( { title, poster_path, overview, vote_average}) => {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={IMG_API + poster_path} alt={title} />\r\n            <div className=\"movie-info\">\r\n                <h3>{title}</h3>\r\n                <span className={`tag ${setVoteClass(vote_average)}`}>\r\n                    {vote_average}\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"movie-over\">\r\n                <h2>OverView:</h2>\r\n                <p>{overview}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Movie;","import React, { useEffect, useState } from 'react';\nimport Movie from './components/Movie';\n\nconst FEATURED_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\";\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\";\n\nfunction App() {\n  \n  const [ movies, setMovies ] = useState([]);\n  const [ searchTerm, setSearchTerm ] = useState('');\n\n  useEffect(() => {\n      getMoives(FEATURED_API);\n  }, []);\n\n  const getMoives = (API) => {\n    fetch(API)\n    .then((res) => res.json())\n    .then((data) => {\n      console.log(data);\n      setMovies(data.results);\n    });\n  }\n\n  const handleOnSubmit = (e) => {\n      e.preventDefault();\n\n      if(searchTerm) {\n        getMoives(SEARCH_API + searchTerm);\n      }\n\n      setSearchTerm('');\n  }\n\n  const handleOnChange = (e) => {\n      setSearchTerm(e.target.value);\n  }\n  return (\n    <div>\n      <header>\n        <h2><em>JMJ.</em> Movie App</h2>\n        <form onSubmit={handleOnSubmit}>\n          <input \n            className=\"search\" \n            type=\"search\" \n            placeholder=\"Search\"\n            value={searchTerm}\n            onChange={handleOnChange}\n          />\n        </form>\n      </header>\n\n      <div className=\"movie-container\">\n        {movies.length > 0 && movies.map((movie) => <Movie key={movie.id} {...movie}></Movie>)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}